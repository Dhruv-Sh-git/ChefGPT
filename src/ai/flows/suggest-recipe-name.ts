// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow that suggests a creative name for a recipe based on its ingredients and instructions.
 *
 * - suggestRecipeName - A function that handles the recipe name suggestion process.
 * - SuggestRecipeNameInput - The input type for the suggestRecipeName function.
 * - SuggestRecipeNameOutput - The return type for the suggestRecipeName function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRecipeNameInputSchema = z.object({
  ingredients: z
    .string()
    .describe('A comma separated list of the main ingredients in the recipe.'),
  instructions: z.string().describe('The instructions for preparing the recipe.'),
});
export type SuggestRecipeNameInput = z.infer<typeof SuggestRecipeNameInputSchema>;

const SuggestRecipeNameOutputSchema = z.object({
  recipeName: z
    .string()
    .describe('A creative and appealing name for the recipe.'),
});
export type SuggestRecipeNameOutput = z.infer<typeof SuggestRecipeNameOutputSchema>;

export async function suggestRecipeName(
  input: SuggestRecipeNameInput
): Promise<SuggestRecipeNameOutput> {
  return suggestRecipeNameFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestRecipeNamePrompt',
  input: {schema: SuggestRecipeNameInputSchema},
  output: {schema: SuggestRecipeNameOutputSchema},
  prompt: `You are a creative chef specializing in naming recipes.

  Given the ingredients and instructions, suggest a creative and appealing name for the recipe.

  Ingredients: {{{ingredients}}}
  Instructions: {{{instructions}}}

  Recipe Name:`,
});

const suggestRecipeNameFlow = ai.defineFlow(
  {
    name: 'suggestRecipeNameFlow',
    inputSchema: SuggestRecipeNameInputSchema,
    outputSchema: SuggestRecipeNameOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
